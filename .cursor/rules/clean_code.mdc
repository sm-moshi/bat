---
description: Clean Code Guidelines
globs:
alwaysApply: false
---
✅ Clean Code & Quality Guidelines (Unified)
===========================================

🧮 Constants Over Magic Numbers
------------------------------
- Replace hard-coded values with named constants.
- Use descriptive names that clarify the constant’s purpose.
- Define constants at the top of the file or in a dedicated module.

🧠 Meaningful Names
-------------------
- Choose names that clearly describe purpose and usage.
- Avoid abbreviations unless universally recognized.

💬 Comments With Purpose
-------------------------
- Make code self-explanatory; don't comment the obvious.
- Use comments to clarify WHY, not WHAT.
- Document APIs, complex logic, and side effects.

🧩 Single Responsibility
------------------------
- Each function should do ONE thing only.
- Functions should be small, focused, and well-named.

♻️ DRY (Don't Repeat Yourself)
------------------------------
- Reuse logic with well-named functions or abstractions.
- Keep a single source of truth.

🗂️ Clean Structure
-------------------
- Group related logic together.
- Follow consistent file/module naming conventions.

🔐 Encapsulation
----------------
- Hide internal logic behind clear interfaces.
- Move nested logic into smaller helper functions.

🧼 Code Hygiene
---------------
- Refactor regularly and incrementally.
- Fix technical debt early—leave the code better than you found it.

🧪 Testing
----------
- Write tests before fixing bugs.
- Cover edge cases and failure scenarios.
- Keep tests clear and reliable.

🧰 Code Review & Automation Rules
=================================

✅ File-by-File Changes
-----------------------
- Edit files one at a time.
- Run tests after every file change.

🧷 Preserve Existing Logic
--------------------------
- Do not remove unrelated code or refactor outside the scope.
- Maintain existing file structure unless otherwise instructed.

⚠️ No Unnecessary Feedback
--------------------------
- Don’t ask for confirmations already provided.
- Don’t comment on understanding or implementation unless asked.
- Avoid suggesting changes to whitespace or formatting.

🚫 Avoid Speculation
---------------------
- Don’t invent features or behaviors without explicit instruction.
- Verify all logic with code or documentation—no guessing.

📁 Real File References
------------------------
- Always link to actual file paths, not placeholder names.

🧱 Single Chunk Edits
---------------------
- Group changes into a single edit per file—no step-by-step instructions.