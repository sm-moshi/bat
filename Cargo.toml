[package]
authors     = ["David Peter <mail@david-peter.de>"]
categories  = ["command-line-utilities"]
description = "A cat(1) clone with wings."
homepage    = "https://github.com/sharkdp/bat"
license     = "MIT OR Apache-2.0"
name        = "bat"
repository  = "https://github.com/sharkdp/bat"
version     = "0.25.1-alpha.1"
exclude     = ["assets/syntaxes/*", "assets/themes/*"]
build       = "build/main.rs"
edition     = '2021'
# You are free to bump MSRV as soon as a reason for bumping emerges.
rust-version = "1.81"

[features]
default = ["application"]
# Feature required for bat the application. Should be disabled when depending on
# bat as a library.
application = ["bugreport", "build-assets", "git", "minimal-application"]
# Mainly for developers that want to iterate quickly
# Be aware that the included features might change in the future
minimal-application = ["clap", "etcetera", "paging", "regex-onig", "wild"]
git                 = ["git2"]                                                        # Support indicating git modifications
paging              = ["shell-words", "grep-cli"]                                     # Support applying a pager on the output
lessopen            = ["execute"]                                                     # Support $LESSOPEN preprocessor
build-assets        = ["syntect/yaml-load", "syntect/plist-load", "regex", "walkdir"]

# You need to use one of these if you depend on bat as a library:
regex-onig  = ["syntect/regex-onig"]  # Use the "oniguruma" regex engine
regex-fancy = ["syntect/regex-fancy"] # Use the rust-only "fancy-regex" engine

[dependencies]
nu-ansi-term         = "0.50.1"
ansi_colours         = "1.2.3"
bincode              = "1.3.3"
console              = "0.15.10"
flate2               = "1.0.35"
once_cell            = "1.20.2"
thiserror            = "2.0.11"
wild                 = { version = "2.2.1", optional = true }
content_inspector    = "0.2.4"
shell-words          = { version = "1.1.0", optional = true }
unicode-width        = "0.1.14"
globset              = "0.4.15"
serde                = "1.0.217"
serde_derive         = "1.0.217"
serde_yaml           = "0.9.33"
semver               = "1.0.25"
path_abs             = { version = "0.5.1", default-features = false }
clircle              = { version = "0.6.1", default-features = false }
bugreport            = { version = "0.5.1", optional = true }
etcetera             = { version = "0.10.0", optional = true }
grep-cli             = { version = "0.1.11", optional = true }
regex                = { version = "1.11.1", optional = true }
walkdir              = { version = "2.5.0", optional = true }
bytesize             = { version = "1.3.3" }
encoding_rs          = "0.8.35"
execute              = { version = "0.2.13", optional = true }
terminal-colorsaurus = "0.4.7"
unicode-segmentation = "1.12.0"
itertools            = "0.13.0"

[dependencies.git2]
version          = "0.20.0"
optional         = true
default-features = false

[dependencies.syntect]
version          = "5.2.0"
default-features = false
features         = ["parsing"]

[dependencies.clap]
version  = "4.5.24"
optional = true
features = ["wrap_help", "cargo"]

[target.'cfg(target_os = "macos")'.dependencies]
home  = "0.5.9"
plist = "1.7.0"

[dev-dependencies]
assert_cmd   = "2.0.16"
expect-test  = "1.5.1"
serial_test  = { version = "2.0.0", default-features = false }
predicates   = "3.1.3"
wait-timeout = "0.2.0"
tempfile     = "3.16.0"
serde        = { version = "1.0.219", features = ["derive"] }

[target.'cfg(unix)'.dev-dependencies]
nix = { version = "0.29.0", default-features = false, features = ["term"] }

[build-dependencies]
anyhow = "1.0.97"
indexmap = { version = "2.8.0", features = ["serde"] }
itertools = "0.14.0"
once_cell = "1.21.3"
regex = "1.11.1"
serde = "1.0.219"
serde_derive = "1.0.219"
serde_with = { version = "3.12.0", default-features = false, features = [
    "macros",
] }
toml = { version = "0.8.19", features = ["preserve_order"] }
walkdir = "2.5.0"

[build-dependencies.clap]
version  = "4.5.37"
optional = true
features = ["wrap_help", "cargo"]

[profile.release]
lto           = true
strip         = true
codegen-units = 1

[profile.profiling]
inherits = "release"
debug    = true
strip    = false
lto      = false
